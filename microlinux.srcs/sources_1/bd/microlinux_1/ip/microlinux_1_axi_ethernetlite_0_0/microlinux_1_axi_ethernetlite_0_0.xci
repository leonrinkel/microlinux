<?xml version="1.0" encoding="UTF-8"?>
<spirit:design xmlns:xilinx="http://www.xilinx.com" xmlns:spirit="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <spirit:vendor>xilinx.com</spirit:vendor>
  <spirit:library>xci</spirit:library>
  <spirit:name>unknown</spirit:name>
  <spirit:version>1.0</spirit:version>
  <spirit:componentInstances>
    <spirit:componentInstance>
      <spirit:instanceName>microlinux_1_axi_ethernetlite_0_0</spirit:instanceName>
      <spirit:componentRef spirit:vendor="xilinx.com" spirit:library="ip" spirit:name="axi_ethernetlite" spirit:version="3.0"/>
      <spirit:configurableElementValues>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.INTERRUPT.PortWidth">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.MDIO.CAN_DEBUG">false</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.ADDR_WIDTH">13</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.ARUSER_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.AWUSER_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.BUSER_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.CLK_DOMAIN">microlinux_1_mig_7series_0_0_ui_clk</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.DATA_WIDTH">32</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.FREQ_HZ">83333333</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_BRESP">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_BURST">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_CACHE">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_LOCK">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_PROT">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_QOS">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_REGION">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_RRESP">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_WSTRB">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.ID_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.INSERT_VIP">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.MAX_BURST_LENGTH">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.NUM_READ_OUTSTANDING">8</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.NUM_READ_THREADS">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.NUM_WRITE_OUTSTANDING">32</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.NUM_WRITE_THREADS">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.PHASE">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.PROTOCOL">AXI4LITE</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.READ_WRITE_MODE">READ_WRITE</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.RUSER_BITS_PER_BYTE">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.RUSER_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.SUPPORTS_NARROW_BURST">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.WUSER_BITS_PER_BYTE">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.WUSER_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI_ACLK.ASSOCIATED_PORT"/>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI_ACLK.CLK_DOMAIN">microlinux_1_mig_7series_0_0_ui_clk</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI_ACLK.FREQ_HZ">83333333</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI_ACLK.FREQ_TOLERANCE_HZ">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI_ACLK.INSERT_VIP">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI_ACLK.PHASE">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI_ARESETN.INSERT_VIP">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="MODELPARAM_VALUE.C_DUPLEX">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="MODELPARAM_VALUE.C_FAMILY">artix7</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="MODELPARAM_VALUE.C_INCLUDE_GLOBAL_BUFFERS">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="MODELPARAM_VALUE.C_INCLUDE_INTERNAL_LOOPBACK">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="MODELPARAM_VALUE.C_INCLUDE_MDIO">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="MODELPARAM_VALUE.C_RX_PING_PONG">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="MODELPARAM_VALUE.C_SELECT_XPM">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="MODELPARAM_VALUE.C_S_AXI_ACLK_PERIOD_PS">12000</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="MODELPARAM_VALUE.C_S_AXI_ID_WIDTH">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="MODELPARAM_VALUE.C_S_AXI_PROTOCOL">AXI4LITE</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="MODELPARAM_VALUE.C_TX_PING_PONG">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.AXI_ACLK_FREQ_MHZ">83.333333</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.C_DUPLEX">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.C_INCLUDE_GLOBAL_BUFFERS">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.C_INCLUDE_INTERNAL_LOOPBACK">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.C_INCLUDE_MDIO">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.C_RX_PING_PONG">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.C_SELECT_XPM">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.C_S_AXI_ID_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.C_S_AXI_PROTOCOL">AXI4LITE</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.C_TX_PING_PONG">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.C_USE_INTERNAL">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.Component_Name">microlinux_1_axi_ethernetlite_0_0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.Enable_Constraints">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.MDIO_BOARD_INTERFACE">eth_mdio_mdc</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.MII_BOARD_INTERFACE">eth_mii</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.USE_BOARD_FLOW">true</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.ARCHITECTURE">artix7</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.BASE_BOARD_PART">digilentinc.com:arty-a7-100:part0:1.1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.BOARD_CONNECTIONS"/>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.DEVICE">xc7a100t</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.PACKAGE">csg324</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.PREFHDL">VERILOG</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.SILICON_REVISION"/>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.SIMULATOR_LANGUAGE">MIXED</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.SPEEDGRADE">-1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.STATIC_POWER"/>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.TEMPERATURE_GRADE"/>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.USE_RDI_CUSTOMIZATION">TRUE</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.USE_RDI_GENERATION">TRUE</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="RUNTIME_PARAM.IPCONTEXT">IP_Integrator</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="RUNTIME_PARAM.IPREVISION">25</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="RUNTIME_PARAM.MANAGED">TRUE</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="RUNTIME_PARAM.OUTPUTDIR">../../../../../../microlinux.gen/sources_1/bd/microlinux_1/ip/microlinux_1_axi_ethernetlite_0_0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="RUNTIME_PARAM.SELECTEDSIMMODEL"/>
        <spirit:configurableElementValue spirit:referenceId="RUNTIME_PARAM.SHAREDDIR">../../ipshared</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="RUNTIME_PARAM.SWVERSION">2022.1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="RUNTIME_PARAM.SYNTHESISFLOW">OUT_OF_CONTEXT</spirit:configurableElementValue>
      </spirit:configurableElementValues>
      <spirit:vendorExtensions>
        <xilinx:componentInstanceExtensions>
          <xilinx:configElementInfos>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.INTERRUPT.PortWidth" xilinx:valueSource="default_prop" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.MDIO.CAN_DEBUG" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.ADDR_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.ARUSER_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.AWUSER_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.BUSER_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.CLK_DOMAIN" xilinx:valueSource="default_prop" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.DATA_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.FREQ_HZ" xilinx:valueSource="default_prop" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_BRESP" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_BURST" xilinx:valueSource="propagated" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_CACHE" xilinx:valueSource="propagated" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_LOCK" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_PROT" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_QOS" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_REGION" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_RRESP" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_WSTRB" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.ID_WIDTH" xilinx:valueSource="constant_prop" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.MAX_BURST_LENGTH" xilinx:valueSource="ip_propagated" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.NUM_READ_OUTSTANDING" xilinx:valueSource="ip_propagated" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.NUM_READ_THREADS" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.NUM_WRITE_OUTSTANDING" xilinx:valueSource="ip_propagated" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.NUM_WRITE_THREADS" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.PHASE" xilinx:valueSource="default_prop" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.PROTOCOL" xilinx:valueSource="auto" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.READ_WRITE_MODE" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.RUSER_BITS_PER_BYTE" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.RUSER_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.SUPPORTS_NARROW_BURST" xilinx:valueSource="ip_propagated" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.WUSER_BITS_PER_BYTE" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.WUSER_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI_ACLK.ASSOCIATED_PORT" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI_ACLK.CLK_DOMAIN" xilinx:valueSource="default_prop" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI_ACLK.FREQ_HZ" xilinx:valueSource="default_prop" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI_ACLK.FREQ_TOLERANCE_HZ" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI_ACLK.PHASE" xilinx:valueSource="default_prop" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.AXI_ACLK_FREQ_MHZ" xilinx:valueSource="propagated" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.C_S_AXI_ID_WIDTH" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.MDIO_BOARD_INTERFACE" xilinx:valueSource="user"/>
            <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.MII_BOARD_INTERFACE" xilinx:valueSource="user"/>
            <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USE_BOARD_FLOW" xilinx:valueSource="user"/>
          </xilinx:configElementInfos>
          <xilinx:boundaryDescriptionInfo>
            <xilinx:boundaryDescription xilinx:boundaryDescriptionJSON="{
              &quot;schema&quot;: &quot;xilinx.com:schema:json_boundary:1.0&quot;,
              &quot;boundary&quot;: {
                &quot;ports&quot;: {
                  &quot;s_axi_aclk&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;s_axi_aresetn&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;ip2intc_irpt&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ],
                  &quot;s_axi_awaddr&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;size_left&quot;: &quot;12&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;s_axi_awvalid&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;s_axi_awready&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ],
                  &quot;s_axi_wdata&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;size_left&quot;: &quot;31&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;s_axi_wstrb&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;size_left&quot;: &quot;3&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;s_axi_wvalid&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;s_axi_wready&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ],
                  &quot;s_axi_bresp&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;1&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;s_axi_bvalid&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ],
                  &quot;s_axi_bready&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;s_axi_araddr&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;size_left&quot;: &quot;12&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;s_axi_arvalid&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;s_axi_arready&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ],
                  &quot;s_axi_rdata&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;31&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;s_axi_rresp&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;1&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;s_axi_rvalid&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ],
                  &quot;s_axi_rready&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;phy_tx_clk&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;phy_rx_clk&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;phy_crs&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;phy_dv&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;phy_rx_data&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;size_left&quot;: &quot;3&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;phy_col&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;phy_rx_er&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;phy_rst_n&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ],
                  &quot;phy_tx_en&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ],
                  &quot;phy_tx_data&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;3&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;phy_mdio_i&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;phy_mdio_o&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ],
                  &quot;phy_mdio_t&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ],
                  &quot;phy_mdc&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ]
                },
                &quot;interfaces&quot;: {
                  &quot;S_AXI&quot;: {
                    &quot;vlnv&quot;: &quot;xilinx.com:interface:aximm:1.0&quot;,
                    &quot;abstraction_type&quot;: &quot;xilinx.com:interface:aximm_rtl:1.0&quot;,
                    &quot;mode&quot;: &quot;slave&quot;,
                    &quot;parameters&quot;: {
                      &quot;DATA_WIDTH&quot;: [ { &quot;value&quot;: &quot;32&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;PROTOCOL&quot;: [ { &quot;value&quot;: &quot;AXI4LITE&quot;, &quot;value_src&quot;: &quot;auto&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;FREQ_HZ&quot;: [ { &quot;value&quot;: &quot;83333333&quot;, &quot;value_src&quot;: &quot;default_prop&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;ID_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant_prop&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;ADDR_WIDTH&quot;: [ { &quot;value&quot;: &quot;13&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;AWUSER_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;ARUSER_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;WUSER_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;RUSER_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;BUSER_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;READ_WRITE_MODE&quot;: [ { &quot;value&quot;: &quot;READ_WRITE&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_BURST&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;propagated&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_LOCK&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_PROT&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_CACHE&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;propagated&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_QOS&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_REGION&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_WSTRB&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_BRESP&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_RRESP&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;SUPPORTS_NARROW_BURST&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;ip_propagated&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;NUM_READ_OUTSTANDING&quot;: [ { &quot;value&quot;: &quot;8&quot;, &quot;value_src&quot;: &quot;ip_propagated&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;NUM_WRITE_OUTSTANDING&quot;: [ { &quot;value&quot;: &quot;32&quot;, &quot;value_src&quot;: &quot;ip_propagated&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;MAX_BURST_LENGTH&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;ip_propagated&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;PHASE&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;default_prop&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;float&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;CLK_DOMAIN&quot;: [ { &quot;value&quot;: &quot;microlinux_1_mig_7series_0_0_ui_clk&quot;, &quot;value_src&quot;: &quot;default_prop&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;NUM_READ_THREADS&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;NUM_WRITE_THREADS&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;RUSER_BITS_PER_BYTE&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;WUSER_BITS_PER_BYTE&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;INSERT_VIP&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;resolve_type&quot;: &quot;user&quot;, &quot;format&quot;: &quot;long&quot;, &quot;usage&quot;: &quot;simulation.rtl&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ]
                    },
                    &quot;port_maps&quot;: {
                      &quot;ARADDR&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_araddr&quot; } ],
                      &quot;ARREADY&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_arready&quot; } ],
                      &quot;ARVALID&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_arvalid&quot; } ],
                      &quot;AWADDR&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_awaddr&quot; } ],
                      &quot;AWREADY&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_awready&quot; } ],
                      &quot;AWVALID&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_awvalid&quot; } ],
                      &quot;BREADY&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_bready&quot; } ],
                      &quot;BRESP&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_bresp&quot; } ],
                      &quot;BVALID&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_bvalid&quot; } ],
                      &quot;RDATA&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_rdata&quot; } ],
                      &quot;RREADY&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_rready&quot; } ],
                      &quot;RRESP&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_rresp&quot; } ],
                      &quot;RVALID&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_rvalid&quot; } ],
                      &quot;WDATA&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_wdata&quot; } ],
                      &quot;WREADY&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_wready&quot; } ],
                      &quot;WSTRB&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_wstrb&quot; } ],
                      &quot;WVALID&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_wvalid&quot; } ]
                    }
                  },
                  &quot;s_axi_aclk&quot;: {
                    &quot;vlnv&quot;: &quot;xilinx.com:signal:clock:1.0&quot;,
                    &quot;abstraction_type&quot;: &quot;xilinx.com:signal:clock_rtl:1.0&quot;,
                    &quot;mode&quot;: &quot;slave&quot;,
                    &quot;parameters&quot;: {
                      &quot;ASSOCIATED_BUSIF&quot;: [ { &quot;value&quot;: &quot;S_AXI&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;usage&quot;: &quot;all&quot; } ],
                      &quot;ASSOCIATED_RESET&quot;: [ { &quot;value&quot;: &quot;s_axi_aresetn&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;usage&quot;: &quot;all&quot; } ],
                      &quot;FREQ_HZ&quot;: [ { &quot;value&quot;: &quot;83333333&quot;, &quot;value_src&quot;: &quot;default_prop&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;FREQ_TOLERANCE_HZ&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;PHASE&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;default_prop&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;float&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;CLK_DOMAIN&quot;: [ { &quot;value&quot;: &quot;microlinux_1_mig_7series_0_0_ui_clk&quot;, &quot;value_src&quot;: &quot;default_prop&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;ASSOCIATED_PORT&quot;: [ { &quot;value&quot;: &quot;&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;INSERT_VIP&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;resolve_type&quot;: &quot;user&quot;, &quot;format&quot;: &quot;long&quot;, &quot;usage&quot;: &quot;simulation.rtl&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ]
                    },
                    &quot;port_maps&quot;: {
                      &quot;CLK&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_aclk&quot; } ]
                    }
                  },
                  &quot;s_axi_aresetn&quot;: {
                    &quot;vlnv&quot;: &quot;xilinx.com:signal:reset:1.0&quot;,
                    &quot;abstraction_type&quot;: &quot;xilinx.com:signal:reset_rtl:1.0&quot;,
                    &quot;mode&quot;: &quot;slave&quot;,
                    &quot;parameters&quot;: {
                      &quot;POLARITY&quot;: [ { &quot;value&quot;: &quot;ACTIVE_LOW&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;usage&quot;: &quot;all&quot; } ],
                      &quot;INSERT_VIP&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;resolve_type&quot;: &quot;user&quot;, &quot;format&quot;: &quot;long&quot;, &quot;usage&quot;: &quot;simulation.rtl&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ]
                    },
                    &quot;port_maps&quot;: {
                      &quot;RST&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_aresetn&quot; } ]
                    }
                  },
                  &quot;interrupt&quot;: {
                    &quot;vlnv&quot;: &quot;xilinx.com:signal:interrupt:1.0&quot;,
                    &quot;abstraction_type&quot;: &quot;xilinx.com:signal:interrupt_rtl:1.0&quot;,
                    &quot;mode&quot;: &quot;master&quot;,
                    &quot;parameters&quot;: {
                      &quot;SUGGESTED_PRIORITY&quot;: [ { &quot;value&quot;: &quot;HIGH&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;usage&quot;: &quot;all&quot; } ],
                      &quot;SENSITIVITY&quot;: [ { &quot;value&quot;: &quot;EDGE_RISING&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;usage&quot;: &quot;all&quot; } ],
                      &quot;PortWidth&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;default_prop&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ]
                    },
                    &quot;port_maps&quot;: {
                      &quot;INTERRUPT&quot;: [ { &quot;physical_name&quot;: &quot;ip2intc_irpt&quot; } ]
                    }
                  },
                  &quot;MII&quot;: {
                    &quot;vlnv&quot;: &quot;xilinx.com:interface:mii:1.0&quot;,
                    &quot;abstraction_type&quot;: &quot;xilinx.com:interface:mii_rtl:1.0&quot;,
                    &quot;mode&quot;: &quot;master&quot;,
                    &quot;parameters&quot;: {
                      &quot;BOARD.ASSOCIATED_PARAM&quot;: [ { &quot;value&quot;: &quot;MII_BOARD_INTERFACE&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;usage&quot;: &quot;all&quot; } ]
                    },
                    &quot;port_maps&quot;: {
                      &quot;COL&quot;: [ { &quot;physical_name&quot;: &quot;phy_col&quot; } ],
                      &quot;CRS&quot;: [ { &quot;physical_name&quot;: &quot;phy_crs&quot; } ],
                      &quot;RST_N&quot;: [ { &quot;physical_name&quot;: &quot;phy_rst_n&quot; } ],
                      &quot;RX_CLK&quot;: [ { &quot;physical_name&quot;: &quot;phy_rx_clk&quot; } ],
                      &quot;RX_DV&quot;: [ { &quot;physical_name&quot;: &quot;phy_dv&quot; } ],
                      &quot;RX_ER&quot;: [ { &quot;physical_name&quot;: &quot;phy_rx_er&quot; } ],
                      &quot;RXD&quot;: [ { &quot;physical_name&quot;: &quot;phy_rx_data&quot; } ],
                      &quot;TX_CLK&quot;: [ { &quot;physical_name&quot;: &quot;phy_tx_clk&quot; } ],
                      &quot;TX_EN&quot;: [ { &quot;physical_name&quot;: &quot;phy_tx_en&quot; } ],
                      &quot;TXD&quot;: [ { &quot;physical_name&quot;: &quot;phy_tx_data&quot; } ]
                    }
                  },
                  &quot;MDIO&quot;: {
                    &quot;vlnv&quot;: &quot;xilinx.com:interface:mdio:1.0&quot;,
                    &quot;abstraction_type&quot;: &quot;xilinx.com:interface:mdio_rtl:1.0&quot;,
                    &quot;mode&quot;: &quot;master&quot;,
                    &quot;parameters&quot;: {
                      &quot;BOARD.ASSOCIATED_PARAM&quot;: [ { &quot;value&quot;: &quot;MDIO_BOARD_INTERFACE&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;usage&quot;: &quot;all&quot; } ],
                      &quot;CAN_DEBUG&quot;: [ { &quot;value&quot;: &quot;false&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;bool&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ]
                    },
                    &quot;port_maps&quot;: {
                      &quot;MDC&quot;: [ { &quot;physical_name&quot;: &quot;phy_mdc&quot; } ],
                      &quot;MDIO_I&quot;: [ { &quot;physical_name&quot;: &quot;phy_mdio_i&quot; } ],
                      &quot;MDIO_O&quot;: [ { &quot;physical_name&quot;: &quot;phy_mdio_o&quot; } ],
                      &quot;MDIO_T&quot;: [ { &quot;physical_name&quot;: &quot;phy_mdio_t&quot; } ]
                    }
                  }
                },
                &quot;memory_maps&quot;: {
                  &quot;S_AXI&quot;: {
                    &quot;display_name&quot;: &quot;S_AXI_MEM&quot;,
                    &quot;description&quot;: &quot;Memory Map for S_AXI&quot;,
                    &quot;address_blocks&quot;: {
                      &quot;Reg&quot;: {
                        &quot;base_address&quot;: &quot;0&quot;,
                        &quot;range&quot;: &quot;4096&quot;,
                        &quot;display_name&quot;: &quot;Reg&quot;,
                        &quot;description&quot;: &quot;Register Block&quot;,
                        &quot;usage&quot;: &quot;register&quot;,
                        &quot;access&quot;: &quot;read-write&quot;,
                        &quot;registers&quot;: {
                          &quot;MDIOADDR&quot;: {
                            &quot;address_offset&quot;: &quot;0x07E4&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;MDIOADDR&quot;,
                            &quot;description&quot;: &quot;MDIO address register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;REGADDR&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 5,
                                &quot;display_name&quot;: &quot;Register Address&quot;,
                                &quot;description&quot;: &quot;PHY register address\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;PHYADDR&quot;: {
                                &quot;bit_offset&quot;: 5,
                                &quot;bit_width&quot;: 5,
                                &quot;display_name&quot;: &quot;Device Address&quot;,
                                &quot;description&quot;: &quot;PHY device address\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;OP&quot;: {
                                &quot;bit_offset&quot;: 10,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Access Type&quot;,
                                &quot;description&quot;: &quot;Operation Access Type\n  0 - Write Access\n  1 - Read Access\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;MDIOWR&quot;: {
                            &quot;address_offset&quot;: &quot;0x07E8&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;MDIOWR&quot;,
                            &quot;description&quot;: &quot;MDIO Write Data register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;MDIO_WDATA&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;MDIO Write Data&quot;,
                                &quot;description&quot;: &quot;MDIO write data to be written to PHY register\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;MDIORD&quot;: {
                            &quot;address_offset&quot;: &quot;0x07EC&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;MDIORD&quot;,
                            &quot;description&quot;: &quot;MDIO Read Data register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;MDIO_RDATA&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;MDIO Read Data&quot;,
                                &quot;description&quot;: &quot;MDIO read data from the PHY register\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;MDIOCTRL&quot;: {
                            &quot;address_offset&quot;: &quot;0x07F0&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;MDIOCTRL&quot;,
                            &quot;description&quot;: &quot;MDIO Control register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;MDIO_Status&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;MDIO Status&quot;,
                                &quot;description&quot;: &quot;MDIO status bit\n  0 - MDIO transfer is complete and core is ready to accept a new MDIO request\n  1 - MDIO transfer is in progress. Setting this bit initiates an MDIO transaction. When the MDIO transaction is complete, the AXI Ethernet Lite MAC core clears this bit PHY register address\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;MDIO_Enable&quot;: {
                                &quot;bit_offset&quot;: 3,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;MDIO Enable&quot;,
                                &quot;description&quot;: &quot;MDIO enable bit\n  0 - Disable MDIO interface\n  1 - Enable MDIO interface\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;TX_Ping_Length&quot;: {
                            &quot;address_offset&quot;: &quot;0x07F4&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Ping Length&quot;,
                            &quot;description&quot;: &quot;Transmit length register for ping buffer&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_Ping_Length_LSB&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 8,
                                &quot;display_name&quot;: &quot;TX Ping Length LSB&quot;,
                                &quot;description&quot;: &quot;The lower 8 bits of the frame length\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TX_Ping_Length_MSB&quot;: {
                                &quot;bit_offset&quot;: 8,
                                &quot;bit_width&quot;: 8,
                                &quot;display_name&quot;: &quot;TX Ping Length MSB&quot;,
                                &quot;description&quot;: &quot;The higher 8 bits of the frame length\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;GIE&quot;: {
                            &quot;address_offset&quot;: &quot;0x07F8&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;GIE&quot;,
                            &quot;description&quot;: &quot;Global Interrupt Enable Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;GIE&quot;: {
                                &quot;bit_offset&quot;: 31,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Global Interrupt Enable&quot;,
                                &quot;description&quot;: &quot;Global Interrupt Enable bit\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;TX_Ping_Control&quot;: {
                            &quot;address_offset&quot;: &quot;0x07FC&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Ping Control&quot;,
                            &quot;description&quot;: &quot;Transmit control register for ping buffer&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;Status&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Transmit ping buffer status&quot;,
                                &quot;description&quot;: &quot;Transmit ping buffer status indicator\n  0 - Transmit ping buffer is ready to accept new frame\n  1 - Frame transfer is in progress. Setting this bit initiates transmit transaction. When transmit is complete, the AXI Ethernet Lite MAC core clears this bit.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;Program&quot;: {
                                &quot;bit_offset&quot;: 1,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Address Program&quot;,
                                &quot;description&quot;: &quot;AXI Ethernet Lite MAC address program bit.\nSetting this bit and status bit configures the new Ethernet MAC address for the core.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;Interrupt_Enable&quot;: {
                                &quot;bit_offset&quot;: 3,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Transmit Interrupt Enable&quot;,
                                &quot;description&quot;: &quot;Transmit Interrupt Enable bit\n  0 - Disable transmit interrupt\n  1 - Enable transmit interrupt\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;Loopback&quot;: {
                                &quot;bit_offset&quot;: 4,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Internal Loopback Enable&quot;,
                                &quot;description&quot;: &quot;Internal loopback enable bit\n  0 - No internal loopback\n  1 - Internal loopback enable\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;TX_Pong_Length&quot;: {
                            &quot;address_offset&quot;: &quot;0x0FF4&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Pong Length&quot;,
                            &quot;description&quot;: &quot;Transmit length register for pong buffer&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_Pong_Length_LSB&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 8,
                                &quot;display_name&quot;: &quot;TX Pong Length LSB&quot;,
                                &quot;description&quot;: &quot;The lower 8 bits of the frame length\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TX_Pong_Length_MSB&quot;: {
                                &quot;bit_offset&quot;: 8,
                                &quot;bit_width&quot;: 8,
                                &quot;display_name&quot;: &quot;TX Pong Length MSB&quot;,
                                &quot;description&quot;: &quot;The higher 8 bits of the frame length\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;TX_Pong_Control&quot;: {
                            &quot;address_offset&quot;: &quot;0x0FFC&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Pong Control&quot;,
                            &quot;description&quot;: &quot;Transmit control register for pong buffer&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;Status&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Transmit pong buffer status&quot;,
                                &quot;description&quot;: &quot;Transmit pong buffer status indicator\n  0 - Transmit pong buffer is ready to accept new frame\n  1 - Frame transfer is in progress. Setting this bit initiates transmit transaction. When transmit is complete, the AXI Ethernet Lite MAC core clears this bit.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;Program&quot;: {
                                &quot;bit_offset&quot;: 1,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Address Program&quot;,
                                &quot;description&quot;: &quot;AXI Ethernet Lite MAC address program bit.\nSetting this bit and status bit configures the new Ethernet MAC address for the core.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;RX_Ping_Control&quot;: {
                            &quot;address_offset&quot;: &quot;0x17FC&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Ping Control&quot;,
                            &quot;description&quot;: &quot;Receive control register for ping buffer&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;Status&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Receive ping buffer status&quot;,
                                &quot;description&quot;: &quot;Receive status indicator\n  0 - Receive ping buffer is empty. AXI Ethernet Lite MAC can accept new valid packet.\n  1 - Indicates presence of receive packet ready for software processing. When the software reads the packet from the receive ping buffer, the software must clear this bit.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;Interrupt_Enable&quot;: {
                                &quot;bit_offset&quot;: 3,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Interrupt Enable&quot;,
                                &quot;description&quot;: &quot;Receive Interrupt Enable bit\n  0 - Disable receive interrupt\n  1 - Enable receive interrupt \n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;RX_Pong_Control&quot;: {
                            &quot;address_offset&quot;: &quot;0x1FFC&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Pong Control&quot;,
                            &quot;description&quot;: &quot;Receive control register for pong buffer&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;Status&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Receive pong buffer status&quot;,
                                &quot;description&quot;: &quot;Receive status indicator   0 - Receive pong buffer is empty. AXI Ethernet Lite MAC can accept new available valid packet.   1 - Indicates presence of receive packet ready for software processing. When the software reads the packet from the receive pong buffer, the software must clear this bit\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }"/>
          </xilinx:boundaryDescriptionInfo>
        </xilinx:componentInstanceExtensions>
      </spirit:vendorExtensions>
    </spirit:componentInstance>
  </spirit:componentInstances>
</spirit:design>
